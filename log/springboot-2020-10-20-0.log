2020-10-20 00:11:02.862 [ Thread-10 ] - [ INFO  ] [ com.alibaba.druid.pool.DruidDataSource : 1818 ] - {dataSource-1} closed
2020-10-20 10:21:29.369 [ main ] - [ INFO  ] [ com.bank.BankApplication : 48 ] - Starting BankApplication on Kurts-MacBook-Pro.local with PID 29023 (/Users/kurtfile/IT/IdeaProjects/bank-master/target/classes started by kurtfile in /Users/kurtfile/IT/IdeaProjects/bank-master)
2020-10-20 10:21:29.371 [ main ] - [ DEBUG ] [ com.bank.BankApplication : 51 ] - Running with Spring Boot v1.5.10.RELEASE, Spring v4.3.14.RELEASE
2020-10-20 10:21:29.371 [ main ] - [ INFO  ] [ com.bank.BankApplication : 593 ] - No active profile set, falling back to default profiles: default
2020-10-20 10:21:29.489 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 30 ] - HV000001: Hibernate Validator 5.3.6.Final
2020-10-20 10:21:30.533 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 180 ] - Starting service [Tomcat]
2020-10-20 10:21:30.534 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 180 ] - Starting Servlet Engine: Apache Tomcat/8.5.27
2020-10-20 10:21:30.599 [ localhost-startStop-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 180 ] - Initializing Spring embedded WebApplicationContext
2020-10-20 10:21:32.299 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 180 ] - Initializing ProtocolHandler ["http-nio-8080"]
2020-10-20 10:21:32.305 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 180 ] - Starting ProtocolHandler ["http-nio-8080"]
2020-10-20 10:21:32.320 [ main ] - [ INFO  ] [ org.apache.tomcat.util.net.NioSelectorPool : 180 ] - Using a shared selector for servlet write/read
2020-10-20 10:21:32.335 [ main ] - [ INFO  ] [ com.bank.BankApplication : 57 ] - Started BankApplication in 3.293 seconds (JVM running for 3.907)
2020-10-20 10:21:33.562 [ RMI TCP Connection(3)-127.0.0.1 ] - [ INFO  ] [ com.alibaba.druid.pool.DruidDataSource : 923 ] - {dataSource-1} inited
2020-10-20 10:22:05.420 [ http-nio-8080-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 180 ] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-10-20 10:22:18.534 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - ==>  Preparing: select user_id, user_name, password, user_type, phone, address, email from bank_user WHERE ( user_name = ? and password = ? ) 
2020-10-20 10:22:18.573 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - ==> Parameters: zjxcy123(String), 187a6fff600a3c15bdf34874369a843c(String)
2020-10-20 10:22:18.588 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 10:22:59.059 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByExample : 159 ] - ==>  Preparing: select cust_id, cust_name, password, identity_card, cust_type, sex, phone, address, email, credit from bank_customer order by cust_id desc 
2020-10-20 10:22:59.062 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:22:59.075 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 10:23:00.606 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByExample : 159 ] - ==>  Preparing: select cust_id, cust_name, password, identity_card, cust_type, sex, phone, address, email, credit from bank_customer order by cust_id desc 
2020-10-20 10:23:00.607 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:23:00.624 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 10:23:13.669 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankDepositRateMapper.selectByExample : 159 ] - ==>  Preparing: select update_date, current_rate, zczq_tm_rate, zczq_hy_rate, zczq_oy_rate, zczq_twy_rate, zczq_ty_rate, zczq_fy_rate, other_oy_rate, other_ty_rate, other_fy_rate from bank_deposit_rate order by update_date desc 
2020-10-20 10:23:13.670 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankDepositRateMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:23:13.687 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankDepositRateMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 10:23:33.507 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 10:23:33.508 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:23:33.528 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 10:23:35.457 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 10:23:35.458 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:23:35.467 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 10:23:47.656 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:23:47.657 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:23:47.666 [ http-nio-8080-exec-4 ] - [ ERROR ] [ druid.sql.Statement : 152 ] - {conn-10005, pstmt-20005} execute error. select
     
     
    paylog_id, trans_id, pay_amount, pay_date, account
   
    from bank_loan_paylog
     
       
     WHERE (  trans_id = ? )
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bank.bank_loan_paylog' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy114.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy65.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy80.selectByExample(Unknown Source)
	at com.bank.service.Impl.LoanServiceImpl.getPaylog(LoanServiceImpl.java:447)
	at com.bank.controller.LoanController.getPayLog(LoanController.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-10-20 10:23:47.669 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan where trans_id = ? 
2020-10-20 10:23:47.671 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:23:47.672 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - ==>  Preparing: select payment_id, trans_id, ins_num, payment_amount, payment_date, is_finished, fine_rate, all_payment_amount, reimbursement from bank_loan_payment WHERE ( trans_id = ? ) 
2020-10-20 10:23:47.673 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:23:47.684 [ http-nio-8080-exec-5 ] - [ ERROR ] [ druid.sql.Statement : 152 ] - {conn-10005, pstmt-20007} execute error. select
     
     
    payment_id, trans_id, ins_num, payment_amount, payment_date, is_finished, fine_rate, 
    all_payment_amount, reimbursement
   
    from bank_loan_payment
     
       
     WHERE (  trans_id = ? )
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bank.bank_loan_payment' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy114.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy65.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy78.selectByExample(Unknown Source)
	at com.bank.service.Impl.LoanServiceImpl.getPaymentOneInfo(LoanServiceImpl.java:466)
	at com.bank.controller.LoanController.getPaymentOneInfo(LoanController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-10-20 10:23:47.684 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:31:17.770 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:31:17.772 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:31:17.782 [ http-nio-8080-exec-9 ] - [ ERROR ] [ druid.sql.Statement : 152 ] - {conn-10006, pstmt-20008} execute error. select
     
     
    paylog_id, trans_id, pay_amount, pay_date, account
   
    from bank_loan_paylog
     
       
     WHERE (  trans_id = ? )
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bank.bank_loan_paylog' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3051)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:619)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3049)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy114.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy65.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy80.selectByExample(Unknown Source)
	at com.bank.service.Impl.LoanServiceImpl.getPaylog(LoanServiceImpl.java:447)
	at com.bank.controller.LoanController.getPayLog(LoanController.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-10-20 10:37:44.713 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:37:44.715 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:37:44.722 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:37:44.736 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - ==>  Preparing: select payment_id, trans_id, ins_num, payment_amount, payment_date, is_finished, fine_rate, all_payment_amount, reimbursement from bank_loan_payment WHERE ( trans_id = ? ) 
2020-10-20 10:37:44.737 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:37:44.744 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:38:04.851 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:38:04.852 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:38:04.869 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:38:27.664 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:38:27.665 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:38:27.696 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:38:40.083 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select account, cust_id, deposit_bank, balances, blocked_balances, open_date, cancel_date, account_kind, account_type, account_status, password from bank_account where account = ? 
2020-10-20 10:38:40.084 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 6668602919259211(String)
2020-10-20 10:38:40.105 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:38:40.107 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select cust_id, cust_name, password, identity_card, cust_type, sex, phone, address, email, credit from bank_customer where cust_id = ? 
2020-10-20 10:38:40.108 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 277458221755805696(String)
2020-10-20 10:38:40.120 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:38:46.712 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select account, cust_id, deposit_bank, balances, blocked_balances, open_date, cancel_date, account_kind, account_type, account_status, password from bank_account where account = ? 
2020-10-20 10:38:46.713 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 6668602919259211(String)
2020-10-20 10:38:46.728 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:38:46.729 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select cust_id, cust_name, password, identity_card, cust_type, sex, phone, address, email, credit from bank_customer where cust_id = ? 
2020-10-20 10:38:46.729 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 277458221755805696(String)
2020-10-20 10:38:46.736 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:38:50.917 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select account, cust_id, deposit_bank, balances, blocked_balances, open_date, cancel_date, account_kind, account_type, account_status, password from bank_account where account = ? 
2020-10-20 10:38:50.918 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 6668602919259211(String)
2020-10-20 10:38:50.925 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankAccountMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:38:50.926 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - ==>  Preparing: select cust_id, cust_name, password, identity_card, cust_type, sex, phone, address, email, credit from bank_customer where cust_id = ? 
2020-10-20 10:38:50.927 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - ==> Parameters: 277458221755805696(String)
2020-10-20 10:38:50.935 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankCustomerMapper.selectByPrimaryKey : 159 ] - <==      Total: 1
2020-10-20 10:38:50.937 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.insert : 159 ] - ==>  Preparing: insert into bank_loan_paylog (paylog_id, trans_id, pay_amount, pay_date, account) values (?, ?, ?, ?, ?) 
2020-10-20 10:38:50.944 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.insert : 159 ] - ==> Parameters: 278474652379389952(String), 277489473032687616(String), 2.0(Double), 1603161530936(String), 6668602919259211(String)
2020-10-20 10:38:50.969 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.insert : 159 ] - <==    Updates: 1
2020-10-20 10:38:50.987 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ c.b.d.B.updateByPrimaryKeySelective : 159 ] - ==>  Preparing: update bank_account SET balances = ? where account = ? 
2020-10-20 10:38:50.991 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ c.b.d.B.updateByPrimaryKeySelective : 159 ] - ==> Parameters: 34.0(Double), 6668602919259211(String)
2020-10-20 10:38:51.004 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ c.b.d.B.updateByPrimaryKeySelective : 159 ] - <==    Updates: 1
2020-10-20 10:38:51.005 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.updateByPrimaryKey : 159 ] - ==>  Preparing: update bank_loan set cust_id = ?, account = ?, trans_date = ?, loan_amount = ?, ins_count = ?, loan_interest = ?, loan_amount_sum = ?, expiration_date = ?, recovered_amount = ?, loan_status = ?, reviewer_id = ?, loan_type_name = ? where trans_id = ? 
2020-10-20 10:38:51.007 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.updateByPrimaryKey : 159 ] - ==> Parameters: 277458221755805696(String), 6668602919259211(String), 1602926645903(String), 10.0(Double), 3(Short), 4.0(Double), 10.0(Double), 1610899199000(String), 0.0(Double), 已还清(String), 1(String), 小微贷款(String), 277489473032687616(String)
2020-10-20 10:38:51.028 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.updateByPrimaryKey : 159 ] - <==    Updates: 1
2020-10-20 10:38:51.036 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - ==>  Preparing: select payment_id, trans_id, ins_num, payment_amount, payment_date, is_finished, fine_rate, all_payment_amount, reimbursement from bank_loan_payment WHERE ( trans_id = ? and is_finished = ? ) order by ins_num ASC 
2020-10-20 10:38:51.037 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String), false(String)
2020-10-20 10:38:51.047 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaymentMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:38:51.087 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 10:38:51.088 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:38:51.099 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 10:38:56.631 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 10:38:56.632 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:38:56.753 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 10:39:01.590 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:39:01.590 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:39:01.623 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 10:39:10.006 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==>  Preparing: select paylog_id, trans_id, pay_amount, pay_date, account from bank_loan_paylog WHERE ( trans_id = ? ) 
2020-10-20 10:39:10.007 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - ==> Parameters: 277489473032687616(String)
2020-10-20 10:39:10.018 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanPaylogMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 10:39:36.109 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankRemitLogMapper.selectByExample : 159 ] - ==>  Preparing: select remit_id, remit_out_account, remit_in_account, amount, remit_generate_date, remit_arrive_date from bank_remit_log WHERE ( remit_id is not null ) 
2020-10-20 10:39:36.111 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankRemitLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:39:36.168 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankRemitLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:39:42.595 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 10:39:42.596 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:39:42.606 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:39:46.143 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==>  Preparing: select fund_tx_id, cust_id, account, fund_id, type, amount, share, tx_date, review_id from bank_fund_log WHERE ( fund_tx_id is not null ) 
2020-10-20 10:39:46.144 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:39:46.154 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 10:40:05.191 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankTransferLogMapper.selectByExample : 159 ] - ==>  Preparing: select transfer_id, transfer_out_account, transfer_in_account, amount, transfer_date, receive_date from bank_transfer_log WHERE ( transfer_id is not null ) 
2020-10-20 10:40:05.192 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankTransferLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 10:40:05.263 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankTransferLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:37:35.588 [ Thread-9 ] - [ INFO  ] [ com.alibaba.druid.pool.DruidDataSource : 1818 ] - {dataSource-1} closed
2020-10-20 15:37:38.588 [ main ] - [ INFO  ] [ com.bank.BankApplication : 48 ] - Starting BankApplication on Kurts-MacBook-Pro.local with PID 31387 (/Users/kurtfile/IT/IdeaProjects/bank-master/target/classes started by kurtfile in /Users/kurtfile/IT/IdeaProjects/bank-master)
2020-10-20 15:37:38.591 [ main ] - [ DEBUG ] [ com.bank.BankApplication : 51 ] - Running with Spring Boot v1.5.10.RELEASE, Spring v4.3.14.RELEASE
2020-10-20 15:37:38.591 [ main ] - [ INFO  ] [ com.bank.BankApplication : 593 ] - No active profile set, falling back to default profiles: default
2020-10-20 15:37:38.724 [ background-preinit ] - [ INFO  ] [ org.hibernate.validator.internal.util.Version : 30 ] - HV000001: Hibernate Validator 5.3.6.Final
2020-10-20 15:37:39.737 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardService : 180 ] - Starting service [Tomcat]
2020-10-20 15:37:39.737 [ main ] - [ INFO  ] [ org.apache.catalina.core.StandardEngine : 180 ] - Starting Servlet Engine: Apache Tomcat/8.5.27
2020-10-20 15:37:39.789 [ localhost-startStop-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 180 ] - Initializing Spring embedded WebApplicationContext
2020-10-20 15:37:41.104 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 180 ] - Initializing ProtocolHandler ["http-nio-8080"]
2020-10-20 15:37:41.109 [ main ] - [ INFO  ] [ org.apache.coyote.http11.Http11NioProtocol : 180 ] - Starting ProtocolHandler ["http-nio-8080"]
2020-10-20 15:37:41.122 [ main ] - [ INFO  ] [ org.apache.tomcat.util.net.NioSelectorPool : 180 ] - Using a shared selector for servlet write/read
2020-10-20 15:37:41.133 [ main ] - [ INFO  ] [ com.bank.BankApplication : 57 ] - Started BankApplication in 2.876 seconds (JVM running for 3.573)
2020-10-20 15:37:42.072 [ RMI TCP Connection(1)-127.0.0.1 ] - [ INFO  ] [ com.alibaba.druid.pool.DruidDataSource : 923 ] - {dataSource-1} inited
2020-10-20 15:41:36.073 [ http-nio-8080-exec-1 ] - [ INFO  ] [ o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] : 180 ] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-10-20 15:41:40.366 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:41:40.386 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:41:40.419 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:41:55.603 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:41:55.604 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:41:55.618 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:48:02.176 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:48:02.178 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:48:02.191 [ http-nio-8080-exec-8 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:48:08.100 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:48:08.101 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:48:08.111 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:53:50.067 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:53:50.069 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:53:50.080 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:53:50.084 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:53:50.085 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:53:50.100 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:54:07.968 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:54:07.969 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:54:08.000 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:54:11.736 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:54:11.737 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:54:11.837 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:54:15.012 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:54:15.013 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:54:15.023 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:54:20.892 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:54:20.893 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:54:20.904 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:54:25.893 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankRemitLogMapper.selectByExample : 159 ] - ==>  Preparing: select remit_id, remit_out_account, remit_in_account, amount, remit_generate_date, remit_arrive_date from bank_remit_log WHERE ( remit_id is not null ) 
2020-10-20 15:54:25.913 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankRemitLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:54:25.923 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankRemitLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:54:29.740 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankTransferLogMapper.selectByExample : 159 ] - ==>  Preparing: select transfer_id, transfer_out_account, transfer_in_account, amount, transfer_date, receive_date from bank_transfer_log WHERE ( transfer_id is not null ) 
2020-10-20 15:54:29.741 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankTransferLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:54:29.768 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankTransferLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:55:49.049 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==>  Preparing: select trans_id, cust_id, account, trans_date, loan_amount, ins_count, loan_interest, loan_amount_sum, expiration_date, recovered_amount, loan_status, reviewer_id, loan_type_name from bank_loan 
2020-10-20 15:55:49.049 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:55:49.058 [ http-nio-8080-exec-9 ] - [ DEBUG ] [ com.bank.dao.BankLoanMapper.selectByExample : 159 ] - <==      Total: 2
2020-10-20 15:55:58.411 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 15:55:58.412 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:55:58.419 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:02.289 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==>  Preparing: select fund_tx_id, cust_id, account, fund_id, type, amount, share, tx_date, review_id from bank_fund_log WHERE ( fund_tx_id is not null ) 
2020-10-20 15:56:02.290 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:02.322 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:03.013 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 15:56:03.014 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:03.052 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:03.900 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==>  Preparing: select fund_tx_id, cust_id, account, fund_id, type, amount, share, tx_date, review_id from bank_fund_log WHERE ( fund_tx_id is not null ) 
2020-10-20 15:56:03.901 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:03.915 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:05.611 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankFundHoldMapper.selectByExample : 159 ] - ==>  Preparing: select account, fund_id, cust_id, share from bank_fund_hold WHERE ( account is not null ) 
2020-10-20 15:56:05.612 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankFundHoldMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:05.619 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankFundHoldMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:06.576 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 15:56:06.577 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:06.593 [ http-nio-8080-exec-4 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:08.438 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==>  Preparing: select fund_tx_id, cust_id, account, fund_id, type, amount, share, tx_date, review_id from bank_fund_log WHERE ( fund_tx_id is not null ) 
2020-10-20 15:56:08.438 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:08.465 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:56:08.957 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 15:56:08.958 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:56:08.971 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:59:01.397 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 15:59:01.398 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:59:01.405 [ http-nio-8080-exec-10 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 15:59:32.008 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==>  Preparing: select fund_tx_id, cust_id, account, fund_id, type, amount, share, tx_date, review_id from bank_fund_log WHERE ( fund_tx_id is not null ) 
2020-10-20 15:59:32.009 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:59:32.023 [ http-nio-8080-exec-1 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 15:59:39.547 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id is not null ) 
2020-10-20 15:59:39.547 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:59:39.562 [ http-nio-8080-exec-2 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 15:59:43.614 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==>  Preparing: select purchase_date, fund_id, type, purchase_rate, net_asset_value, redemption_rate from bank_fund_product WHERE ( fund_id = ? ) 
2020-10-20 15:59:43.617 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - ==> Parameters: 1(String)
2020-10-20 15:59:43.633 [ http-nio-8080-exec-3 ] - [ DEBUG ] [ com.bank.dao.BankFundProductMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 15:59:53.062 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==>  Preparing: select fund_tx_id, cust_id, account, fund_id, type, amount, share, tx_date, review_id from bank_fund_log WHERE ( fund_tx_id is not null ) 
2020-10-20 15:59:53.062 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - ==> Parameters: 
2020-10-20 15:59:53.069 [ http-nio-8080-exec-5 ] - [ DEBUG ] [ com.bank.dao.BankFundLogMapper.selectByExample : 159 ] - <==      Total: 0
2020-10-20 16:50:33.666 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - ==>  Preparing: select user_id, user_name, password, user_type, phone, address, email from bank_user WHERE ( user_name = ? and password = ? ) 
2020-10-20 16:50:33.669 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - ==> Parameters: zjxcy123(String), 187a6fff600a3c15bdf34874369a843c(String)
2020-10-20 16:50:33.677 [ http-nio-8080-exec-7 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - <==      Total: 1
2020-10-20 16:50:34.254 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - ==>  Preparing: select user_id, user_name, password, user_type, phone, address, email from bank_user WHERE ( user_name = ? and password = ? ) 
2020-10-20 16:50:34.254 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - ==> Parameters: zjxcy123(String), 187a6fff600a3c15bdf34874369a843c(String)
2020-10-20 16:50:34.269 [ http-nio-8080-exec-6 ] - [ DEBUG ] [ com.bank.dao.BankUserMapper.selectByExample : 159 ] - <==      Total: 1
